CMAKE_MINIMUM_REQUIRED(VERSION 2.8)

PROJECT(LIGHTSD C)

SET(CPACK_PACKAGE_VERSION_MAJOR "0")
SET(CPACK_PACKAGE_VERSION_MINOR "0")
SET(CPACK_PACKAGE_VERSION_PATCH "1")
SET(LIGHTSD_VERSION "${CPACK_PACKAGE_VERSION_MAJOR}.${CPACK_PACKAGE_VERSION_MINOR}.${CPACK_PACKAGE_VERSION_PATCH}")

MESSAGE(STATUS "CMake version: ${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}.${CMAKE_PATCH_VERSION}")
MESSAGE(STATUS "lgtd version: ${LIGHTSD_VERSION}")
MESSAGE(STATUS "Build type: ${CMAKE_BUILD_TYPE}")
MESSAGE(STATUS "System: ${CMAKE_SYSTEM_NAME} ${CMAKE_SYSTEM_VERSION}")
MESSAGE(STATUS "Install prefix: ${CMAKE_INSTALL_PREFIX}")
MESSAGE(STATUS "Source directory: ${LIGHTSD_SOURCE_DIR}")

SET(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} ${LIGHTSD_SOURCE_DIR}/CMakeScripts)

ENABLE_TESTING()

### Platform checks ############################################################

# TODO: we need at least 2.0.19-stable because of the logging defines
FIND_PACKAGE(Event2 REQUIRED COMPONENTS core)
FIND_PACKAGE(Endian REQUIRED)
INCLUDE(CompatTimeMonotonic)

### Global definitions #########################################################

INCLUDE(AddAllSubdirectories)
INCLUDE(AddTestFromSources)

SET(CMAKE_C_FLAGS "-pipe -Wextra -Wall -Wstrict-prototypes -std=c99")

ADD_DEFINITIONS("-DLGTD_SIZEOF_VOID_P=${CMAKE_SIZEOF_VOID_P}")

# Only relevant for the GNU libc:
ADD_DEFINITIONS(
    "-D_POSIX_C_SOURCE=200809L"
    "-D_BSD_SOURCE=1"
    "-D_DEFAULT_SOURCE=1"
)

IF (CMAKE_BUILD_TYPE MATCHES "DEBUG")
    ADD_DEFINITIONS("-DQUEUE_MACRO_DEBUG=1")
    IF (CMAKE_COMPILER_IS_GNUCC)
        ADD_DEFINITIONS("-g3" "-ggdb")
    ENDIF ()
ENDIF ()

INCLUDE_DIRECTORIES(${LIGHTSD_SOURCE_DIR}/compat/generic ${LIGHTSD_BINARY_DIR}/compat)

ADD_SUBDIRECTORY(core)
ADD_SUBDIRECTORY(lifx)
ADD_SUBDIRECTORY(tests)
